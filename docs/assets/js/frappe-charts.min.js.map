{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/draw.js","../../../src/js/utils/colors.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/date-utils.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../src/js/objects/SvgTip.js","../../../src/js/utils/constants.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 0 ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content, fontSize = FONT_SIZE) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (fontSize / 2) + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, getPaths } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.startPos, region.endPos, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\nexport function getWeeksBetween(startDate, endDate) {\n\treturn Math.ceil(getDaysBetween(startDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tconst day = date.getDay();\n\tif(day !== NO_OF_DAYS_IN_WEEK) {\n\t\taddDays(date, (-1) * day);\n\t}\n\treturn date;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\n\t\t\t\tif(i % multiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}","import '../scss/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\nconst chartTypes = {\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t\t// this.showTip();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_CHART_TOP_MARGIN = 10;\nexport const BASE_CHART_LEFT_MARGIN = 20;\nexport const BASE_CHART_RIGHT_MARGIN = 20;\n\nexport const Y_AXIS_LEFT_MARGIN = 60;\nexport const Y_AXIS_RIGHT_MARGIN = 40;\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nconst HEATMAP_COLORS = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS\n};","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText, AXIS_TICK_LENGTH } from '../utils/draw';\nimport { BASE_CHART_TOP_MARGIN, BASE_CHART_LEFT_MARGIN,\n\tBASE_CHART_RIGHT_MARGIN, INIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS,\n\tALL_CHART_TYPES, COMPATIBLE_CHARTS, DATA_COLOR_DIVISIONS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { Chart } from '../chart';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.argHeight = options.height || 240;\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: options.showLegend || 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: 1\n\t\t};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tconfigure() {\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw(true));\n\t\twindow.addEventListener('orientationchange', () => this.draw(true));\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMargins() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 70;\n\t\tthis.topMargin = BASE_CHART_TOP_MARGIN;\n\n\t\t// Horizontal margins\n\t\tthis.leftMargin = BASE_CHART_LEFT_MARGIN;\n\t\tthis.rightMargin = BASE_CHART_RIGHT_MARGIN;\n\t}\n\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t});\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.updateWidth();\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.renderLegend();\n\t\t}\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - (this.leftMargin + this.rightMargin);\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\n\t\tlet titleAreaHeight = 0;\n\t\tlet legendAreaHeight = 0;\n\t\tif(this.title.length) {\n\t\t\ttitleAreaHeight = 30;\n\t\t}\n\t\tif(this.showLegend) {\n\t\t\tlegendAreaHeight = 30;\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight + titleAreaHeight + legendAreaHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tthis.leftMargin - AXIS_TICK_LENGTH,\n\t\t\t\tthis.topMargin,\n\t\t\t\tthis.title,\n\t\t\t\t11\n\t\t\t);\n\t\t\tthis.svg.appendChild(this.titleEL);\n\t\t}\n\n\t\tlet top = this.topMargin + titleAreaHeight;\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.leftMargin}, ${top})`\n\t\t);\n\n\t\ttop = this.baseHeight + titleAreaHeight;\n\t\tthis.legendArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\t'chart-legend',\n\t\t\t`translate(${this.leftMargin}, ${top})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\tgetDifferentChart(type) {\n\t\tconst currentType = this.type;\n\t\tlet args = this.rawChartArgs;\n\t\tif(type === currentType) return;\n\n\t\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\n\t\tif(!COMPATIBLE_CHARTS[currentType].includes(type)) {\n\t\t\tconsole.error(`'${currentType}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// whether the new chart can use the existing colors\n\t\tconst useColor = DATA_COLOR_DIVISIONS[currentType] === DATA_COLOR_DIVISIONS[type];\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'changeChartType(type)'\n\t\t// that will update only the required elements, but for now ...\n\n\t\targs.type = type;\n\t\targs.colors = useColor ? args.colors : undefined;\n\n\t\treturn new Chart(this.parent, args);\n\t}\n\n\tunbindWindowEvents(){\n\t\twindow.removeEventListener('resize', () => this.draw(true));\n\t\twindow.removeEventListener('orientationchange', () => this.draw(true));\n\t}\n}\n","import BaseChart from './BaseChart';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(d[0]);\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\t// let s = this.state;\n\n\t\t// this.statsWrapper.textContent = '';\n\n\t\t// this.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\t// let xValues = s.labels;\n\t\t// this.legendTotals.map((d, i) => {\n\t\t// \tif(d) {\n\t\t// \t\tlet stats = $.create('div', {\n\t\t// \t\t\tclassName: 'stats',\n\t\t// \t\t\tinside: this.statsWrapper\n\t\t// \t\t});\n\t\t// \t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t// \t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t// \t\t\t<span class=\"text-muted\">${xValues[i]}:</span>\n\t\t// \t\t\t${d}\n\t\t// \t\t</span>`;\n\t\t// \t}\n\t\t// });\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.container.className += ' ' + 'graph-focus-margin';\n\t\tthis.container.style.marginTop = '45px';\n\n\t\t// this.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\t// this.statsWrapper.style.marginBottom = '30px';\n\t\t// this.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.svg = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.container\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.svg\n\t\t});\n\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\trender() {\n\t\tlet s = this.state;\n\t\tthis.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\t\ts.slices = [];\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\t'data-index': i,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grandTotal + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\ts.slices.push(slice);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet slice = e.target;\n\t\t\tif(slice.classList.contains('progress-bar')) {\n\n\t\t\t\tlet i = slice.getAttribute('data-index');\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(slice);\n\n\t\t\t\tlet x = pOff.left - gOff.left + slice.offsetWidth/2;\n\t\t\t\tlet y = pOff.top - gOff.top - 6;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet percent = (s.sliceTotals[i]*100/this.grandTotal).toFixed(1);\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\tthis.init = 1;\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.calcSlices();\n\t}\n\n\tcalcSlices() {\n\t\tlet s = this.state;\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = makeArcPathStr(curStart, curEnd, this.center, this.radius, this.clockWise);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, setDayToSunday, getDdMmYyyy, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\nconst DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tthis.setup();\n\t}\n\n\tupdateWidth() {\n\t\tthis.baseWidth = (this.state.noOfWeeks + 99) * COL_WIDTH;\n\n\t\tif(this.discreteDomains) {\n\t\t\tthis.baseWidth += (COL_WIDTH * NO_OF_YEAR_MONTHS);\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tsuper.makeChartArea();\n\t\tthis.domainLabelGroup = makeSVGGroup(this.drawArea,\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.colGroups = makeSVGGroup(this.drawArea,\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getDdMmYyyy(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = this.data.start;\n\t\ts.end = this.data.end;\n\n\t\ts.firstWeekStart = setDayToSunday(clone(s.start));\n\t\ts.noOfWeeks = getWeeksBetween(s.firstWeekStart, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\trender() {\n\t\tthis.domainLabelGroup.textContent = '';\n\t\tthis.colGroups.textContent = '';\n\n\t\tlet currentWeekSunday = new Date(this.state.firstWeekStart);\n\t\tthis.currentWeekCol = 0;\n\t\tthis.currentMonth = currentWeekSunday.getMonth();\n\n\t\tthis.months = [this.currentMonth + ''];\n\t\tthis.monthWeeks = {},\n\t\tthis.monthStartPoints = [];\n\t\tthis.monthWeeks[this.currentMonth] = 0;\n\n\t\tfor(var i = 0; i < this.state.noOfWeeks; i++) {\n\t\t\tlet colGroup, monthChange = 0;\n\t\t\tlet day = new Date(currentWeekSunday);\n\n\t\t\t[colGroup, monthChange] = this.getWeekSquaresGroup(day, this.currentWeekCol);\n\t\t\tthis.colGroups.appendChild(colGroup);\n\t\t\tthis.currentWeekCol += 1 + parseInt(this.discreteDomains && monthChange);\n\t\t\tthis.monthWeeks[this.currentMonth]++;\n\t\t\tif(monthChange) {\n\t\t\t\tthis.currentMonth = (this.currentMonth + 1) % NO_OF_YEAR_MONTHS;\n\t\t\t\tthis.months.push(this.currentMonth + '');\n\t\t\t\tthis.monthWeeks[this.currentMonth] = 1;\n\t\t\t}\n\t\t\taddDays(currentWeekSunday, NO_OF_DAYS_IN_WEEK);\n\t\t}\n\t\tthis.renderMonthLabels();\n\t}\n\n\tgetWeekSquaresGroup(currentDate, currentWeekCol) {\n\t\tlet monthChange = 0;\n\t\tlet weekColChange = 0;\n\n\t\tlet colGroup = makeSVGGroup(this.colGroups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < NO_OF_DAYS_IN_WEEK; i += DAY_INCR, y += ROW_HEIGHT) {\n\t\t\tlet ddmmyyyy = getDdMmYyyy(currentDate);\n\t\t\tlet dataValue = this.data.dataPoints[ddmmyyyy] || 0;\n\t\t\tlet colorIndex = getMaxCheckpoint(dataValue, this.state.distribution);\n\n\t\t\tlet x = (currentWeekCol + weekColChange) * COL_WIDTH;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': ddmmyyyy,\n\t\t\t\t'data-value': dataValue,\n\t\t\t\t'data-day': currentDate.getDay()\n\t\t\t};\n\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, HEATMAP_SQUARE_SIZE,\n\t\t\t\tthis.colors[colorIndex], dataAttr);\n\n\t\t\tcolGroup.appendChild(heatSquare);\n\n\t\t\tlet nextDate = new Date(currentDate);\n\t\t\taddDays(nextDate, 1);\n\t\t\tif(nextDate > this.state.end) break;\n\n\t\t\tif(nextDate.getMonth() - currentDate.getMonth()) {\n\t\t\t\tmonthChange = 1;\n\t\t\t\tif(this.discreteDomains) {\n\t\t\t\t\tweekColChange = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.monthStartPoints.push((currentWeekCol + weekColChange) * COL_WIDTH);\n\t\t\t}\n\t\t\tcurrentDate = nextDate;\n\t\t}\n\n\t\treturn [colGroup, monthChange];\n\t}\n\n\trenderMonthLabels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.state.firstWeekStart.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.monthStartPoints.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.monthStartPoints.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.monthStartPoints.shift();\n\t\tthis.months.pop();\n\t\tthis.monthStartPoints.pop();\n\n\t\tthis.monthStartPoints.map((start, i) => {\n\t\t\tlet month_name = getMonthName(this.months[i], true);\n\t\t\tlet text = makeText('y-value-text', start + COL_WIDTH, HEATMAP_SQUARE_SIZE, month_name);\n\t\t\tthis.domainLabelGroup.appendChild(text);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet dateParts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = pOff.left - gOff.left + (width+2)/2;\n\t\t\t\tlet y = pOff.top - gOff.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\tthis.tip.showTip();\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { Y_AXIS_LEFT_MARGIN, Y_AXIS_RIGHT_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay } from '../utils/draw';\nimport { MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO, LINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\targs.axisOptions = args.axisOptions || {};\n\t\targs.tooltipOptions = args.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = args.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = args.axisOptions.xIsSeries || 0;\n\n\t\tthis.config.formatTooltipX = args.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = args.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = args.valuesOverPoints;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.leftMargin = Y_AXIS_LEFT_MARGIN;\n\t\tthis.rightMargin = Y_AXIS_RIGHT_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(onlyWidthChange) return;\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - this.leftMargin;\n\t\t\tlet relY = e.pageY - o.top - this.topMargin;\n\n\t\t\tif(relY < this.height + this.topMargin * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet formatX = this.config.formatTooltipX;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(formatX && formatX(titles[0])) {\n\t\t\ttitles = titles.map(d=>formatX(d));\n\t\t}\n\n\t\tformatY = formatY && formatY(s.yAxis.labels[0]) ? formatY : 0;\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.leftMargin;\n\t\t\t\tlet y = s.yExtremes[i] + this.topMargin;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.name,\n\t\t\t\t\t\tvalue: formatY ? formatY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.setValues(x, y, {name: titles[i], value: ''}, values, i);\n\t\t\t\tthis.tip.showTip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\t// let s = this.data;\n\t\t// this.statsWrapper.textContent = '';\n\n\t\t// if(s.datasets.length > 1) {\n\t\t// \ts.datasets.map((d, i) => {\n\t\t// \t\tlet stats = $.create('div', {\n\t\t// \t\t\tclassName: 'stats',\n\t\t// \t\t\tinside: this.statsWrapper\n\t\t// \t\t});\n\t\t// \t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t// \t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t// \t\t\t${d.name}\n\t\t// \t\t</span>`;\n\t\t// \t});\n\t\t// }\n\t}\n\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n"],"names":["$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","arcStartX","x","arcStartY","arcEndX","arcEndY","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","size","data","args","key","makeText","content","fontSize","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","group","datasetDot","dot","getPaths","xList","yList","pointsStr","join","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","slice","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","translate","unit","oldCoord","newCoord","duration","old","transform","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","push","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","undefined","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","dd","getDate","mm","getMonth","getFullYear","clone","getTime","getWeeksBetween","startDate","endDate","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","getMonthName","short","monthName","MONTH_NAMES","setDayToSunday","day","getDay","addDays","numberOfDays","setDate","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","error","create","createElement","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","container","this","hideTip","title","dataPointList","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","ALL_CHART_TYPES","COMPATIBLE_CHARTS","DATA_COLOR_DIVISIONS","HEATMAP_DISTRIBUTION_SIZE","INIT_CHART_UPDATE_TIMEOUT","PI","DEFAULT_CHART_COLORS","DEFAULT_COLORS","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","PRESET_COLOR_MAP","BaseChart","HTMLElement","Error","rawChartArgs","argHeight","prepareData","prepareFirstData","validateColors","showLegend","isNavigable","state","initTimeout","overlays","configure","setMargins","_this","draw","validColors","forEach","warn","baseHeight","topMargin","leftMargin","rightMargin","makeContainer","components","Map","tip","bindTooltip","onlyWidthChange","init","calc","updateWidth","makeChartArea","setupComponents","c","drawArea","render","update","renderLegend","setupNavigation","baseWidth","animate","svg","make","updateNav","bindUnits","titleAreaHeight","legendAreaHeight","titleEL","legendArea","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","currentType","useColor","Chart","removeEventListener","_this5","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","a","sumOfRemaining","PercentageChart","marginTop","chart","percentageBar","grandTotal","reduce","slices","classList","contains","gOff","_this3","pOff","formattedLabels","percent","setValues","showTip","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","textContent","sliceStrings","transition","newData","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","marker","startPos","endPos","newStarts","oldStarts","unitType","units","yPositions","xPositions","barWidth","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","calcSlices","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","component","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","get","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","discreteDomains","countLabel","HEATMAP_SQUARE_SIZE","noOfWeeks","COL_WIDTH","domainLabelGroup","colGroups","setFullYear","dataPoints","points","timestampSec","firstWeekStart","currentWeekSunday","currentWeekCol","currentMonth","months","monthWeeks","monthStartPoints","colGroup","monthChange","getWeekSquaresGroup","renderMonthLabels","currentDate","weekColChange","ddmmyyyy","dataValue","colorIndex","dataAttr","heatSquare","nextDate","shift","pop","prototype","call","querySelectorAll","dateParts","month","barOptions","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","dotSize","markerConfigs","optionals","dataUnitComponents","relX","mapTooltipXPosition","formatY","formatX","titles","xVal","overlayGuides","currentIndex","currentUnit","_this6","setCurrentDataPoint","_this8","_this9","getDataPoint","datasetValues","splice"],"mappings":"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"}